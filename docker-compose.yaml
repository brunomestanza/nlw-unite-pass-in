version: '3.7'

services:
  postgres:
    # We can download an image to use it here
    image: postgres:16.2-alpine3.19
    container_name: db-passin
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - 'db:/var/lib/postgresql/data'
    networks:
      - passin

  api-passin:
    build:
      # We pass to the context where is the Dockerfile it will use for use the Dockerfile image
      context: .
    container_name: api-passin
    ports:
      - 3333:3333
    environment:
      # We pass @postgres because it refers to the postgres service above
      # It works because the containers are both in the same network
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_USER}@postgres:5432/${POSTGRES_DB}
      - API_BASE_URL=http://localhost:3333
    # The depends on only verifies if the container is up, but not if its working as expected
    # it dont verify the health of the container
    depends_on:
      - postgres
    networks:
      - passin
      
networks:
  passin:
    driver: bridge

volumes:
  db: